<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='./rfc2629.xslt' ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="exp" docName="activity-schema-01" ipr="none">
  <front>
    <title abbrev="ActivitySchema">Atom Activity Base Schema (Draft)</title>

    <author fullname="Martin Atkins" initials="M." surname="Atkins">
      <organization>SAY Media</organization>
    </author>

    <author fullname="David Recordon" initials="D." surname="Recordon">
      <organization>Six Apart, Facebook</organization>
    </author>

    <author fullname="Chris Messina" initials="C." surname="Messina">
      <organization>Citizen Agency, Google</organization>
    </author>

    <author fullname="Monica Keller" initials="M." surname="Keller">
      <organization>MySpace, Facebook</organization>
    </author>

    <author fullname="Ari Steinberg" initials="A." surname="Steinberg">
      <organization>Facebook</organization>
    </author>

    <author fullname="Rob Dolin" initials="R." surname="Dolin">
      <organization>Microsoft</organization>
    </author>

    <date />

    <abstract>
      <t>This document presents a base set of Object types and Verbs for use
      with Atom Activity Extensions.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>This document presents a base set of Object types and Verbs for use
      with Atom Activity Extensions.</t>
    </section>

    <section title="Notational Conventions">
      <t>This specification allows the use of IRIs [RFC3987]. Every URI
      [RFC3986] is also an IRI, so a URI MAY be used wherever an IRI is named.
      When an IRI that is not also a URI is given for dereferencing, it MUST
      be mapped to a URI using the steps in Section 3.1 of [RFC3987]. When an
      IRI is serving as an identifier, it MUST NOT be so mapped.</t>

      <t>This specification uses "the Atom specification" to refer to <xref
      target="RFC4287"></xref>, and "the Activity Streams specification" to
      refer to <xref target="activitystreams"></xref>.</t>
    </section>

    <section title="Base Schema">
      <t>The base schema provides generic terms that all activity consumers
      SHOULD support. The other, more specific sections that follow use
      specializations of this base vocabulary to provide additional terms that
      may only be useful in certain applications.</t>

      <section title="Base Verbs">
        <section anchor="favorite" title="Mark as Favorite">
          <t>The "mark as favorite" Verb indicates that the Actor marked the
          Object as an item of special interest. Objects so marked often
          appear in a collection of such Objects which may be published as a
          feed of entries annotated with this Verb.</t>

          <t>If a particular service uses favorites as a mechanism by which a
          user can recall items that were earlier marked, it may be
          appropriate to also mark activities of this type with the "save"
          Verb as described in <xref target="save"></xref>.</t>

          <t>The "mark as favorite" Verb is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/favorite</spanx>.</t>
        </section>

        <section anchor="follow" title="Start Following">
          <t>The "start following" Verb indicates that the Actor began
          following the activity of the Object. In most cases, the Object of
          this Verb will be a <xref target="person">Person</xref>, but it can
          potentially be of any type that can sensibly generate activity.</t>

          <t>The "start following" Verb is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/follow</spanx>.</t>

          <t>Processors MAY ignore (silently drop) successive identical "start
          following" activities regardless of whether they maintain state
          sufficient to determine (A), (B), or (C) above.</t>
        </section>

        <section anchor="like" title="Mark as Liked">
          <t>The "mark as liked" verb indicates that the Actor indicated that
          it likes the Object.</t>

          <t>The "mark as liked" Verb is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/like</spanx>.</t>
        </section>

        <section anchor="make-friend" title="Make Friend">
          <t>The "make friend" Verb indicates the creation of a friendship
          that is reciprocated by the object.</t>

          <t>Since this verb implies an activity on the part of its object,
          processors MUST NOT accept activities with this Verb unless they are
          able to verify through some external means that there is in fact a
          reciprocated connection. For example, a processor may have received
          a guarantee from a particular publisher that the publisher will only
          use this Verb in cases where a reciprocal relationship exists.</t>

          <t>The "make friend" Verb is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/make-friend</spanx>.</t>
        </section>

        <section anchor="join" title="Join">
          <t>The "join" Verb indicates that the actor has become a member of
          the Object. This specification only defines the meaning of this Verb
          when its Object is a <xref target="group">Group</xref>, though
          implementors SHOULD be prepared to handle other Object types as
          meaning MAY be provided by extension specifications.</t>

          <t>Processors MAY ignore (silently drop) successive identical "join"
          activities regardless of whether they maintain state sufficient to
          determine (A) or (B) above.</t>

          <t>The "join" Verb is identified by the URI <spanx style="verb">http://activitystrea.ms/schema/1.0/join</spanx>.</t>
        </section>

        <section anchor="play" title="Play">
          <t>The "play" verb indicates that the subject spent some time
          enjoying the object. For example, if the object is a video this
          indicates that the subject watched all or part of the video.</t>

          <t>The "play" Verb is identified by the URI <spanx style="verb">http://activitystrea.ms/schema/1.0/play</spanx>.</t>
        </section>

        <section anchor="post" title="Post">
          <t>The "Post" Verb is described in section 8 of the AtomActivity
          specification. It is only referenced here for completeness.</t>
        </section>

        <section anchor="save" title="Save">
          <t>The "save" Verb indicates that the Subject has called out the
          Object as being of interest primarily to him- or herself. Though
          this action MAY be shared publicly, the implication is that the
          Object has been saved primarily for the actor's own benefit rather
          than to show it to others as would be indicated by the "share" Verb
          (<xref target="share"></xref>).</t>

          <t>The "save" Verb is identified by the URI <spanx style="verb">http://activitystrea.ms/schema/1.0/save</spanx>.</t>
        </section>

        <section anchor="share" title="Share">
          <t>The "share" Verb indicates that the Subject has called out the
          Object to readers. In most cases, the actor did not create the
          Object being shared, but is instead drawing attention to it.</t>

          <t>The "share" Verb is identified by the URI <spanx style="verb">http://activitystrea.ms/schema/1.0/share</spanx>.</t>
        </section>

        <section anchor="tag" title="Tag">
          <t>The "tag" verb indicates that the actor has identified the
          presence of a target inside another object. For example, the actor
          may have specified that a particular user appears in a photo.</t>

          <t>The "tag" verb is identified by the URI <spanx style="verb">http://activitystrea.ms/schema/1.0/tag</spanx>.</t>

          <t>The target of the "tag" verb gives the object in which the tag
          has been added. For example, if a user appears in a photo, the
          activity:object is the user and the activity:target is the
          photo.</t>
        </section>

        <section anchor="update" title="Update">
          <t>The "update" Verb indicates that the Subject has modified the
          referenced Object.</t>

          <t>Implementors SHOULD use verbs such as <xref target="post"></xref>
          where the Subject is adding new items to a <xref
          target="list"></xref> or similar. Update is reserved for
          modifications to existing Objects or data such as changing a user's
          profile information.</t>

          <t>The "update" Verb is identified by the URI <spanx style="verb">http://activitystrea.ms/schema/1.0/update</spanx>.</t>
        </section>
      </section>

      <section title="Base Object Types">
        <section anchor="article" title="Article">
          <t>The "article" Object type indicates that the Object is an
          article, such as a news article, a knowledge base entry, or other
          similar construct.</t>

          <t>Articles generally consist of paragraphs of text, in some cases
          incorporating embedded media such as photos and inline hyperlinks to
          other resources.</t>

          <t>The "Article" Object type is identified by the URL <spanx
          style="verb">http://activitystrea.ms/schema/1.0/article</spanx>.</t>

          <t>An article has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Name">The title of the article. Represented by the
              Name component of the base Object Construct.</t>

              <t hangText="Content">The main body content of the article.
              Represented in JSON as a property called <spanx style="verb">content</spanx>
              whose value is a JSON string containing a fragment of HTML that
              represents the content.</t>
            </list></t>

          <t>An article is equivalent to a blog entry.</t>
        </section>

        <section anchor="audio" title="Audio">
          <t>The "audio" Object type represents audio content.</t>

          <t>The "audio" Object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/audio</spanx>.</t>

          <t>An audio has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Audio Stream Link">A Media Link Construct linking
              to the audio content itself. Represented in JSON as a property
              called <spanx style="verb">stream</spanx> whose value is a JSON
              object with properties as defined in [TODO: xref the JSON
              serialization of a Media Link Construct]</t>

              <t hangText="Embed Code">An HTML fragment that, when embedded in
              an HTML page, will provide an interactive player UI for the
              audio stream. Represented in JSON as a property called <spanx
              style="verb">embedCode</spanx> whose value is a JSON string
              containing the fragment of HTML.</t>
            </list></t>
        </section>

        <section anchor="bookmark" title="Bookmark">
          <t>The "bookmark" Object type represents a pointer to some URL --
          typically a web page. In most cases, a bookmark is specific to a
          given user and contains metadata chosen by that user. Bookmark
          Objects are similar in principle to the concept of bookmarks or
          favorites in a web browser. A bookmark represents a pointer to the
          URL, not the URL or the associated resource itself.</t>

          <t>When dealing with bookmarks it is important to note the
          distinction between the title, description, and URL of the bookmark
          itself and the title, content, and URL of the resource that is the
          target of the bookmark. In some implementations these MAY be the
          same, but bookmark managers often allow a user to edit the title and
          description of his or her own bookmarks to differ from the metadata
          on the target itself.</t>

          <t>Some implementations refer to this Object type as a "link". This
          specification uses the term "bookmark" to avoid confusion with the
          general concept of hyperlinks which apply to all Object types.</t>

          <t>Since bookmarks are often specific to a particular user, even
          though multiple users might have bookmarks pointing at the same
          resource, it is appropriate to use the "post" Verb to describe the
          publication of such a bookmark. The "mark as favorite" Verb SHOULD
          be used when a user flags another user's bookmark as being a
          favorite without creating his own bookmark, or when a user flags his
          own bookmark as being a favorite as a special classification within
          his own bookmark collection.</t>

          <t>The "bookmark" Object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/bookmark</spanx>.</t>

          <t>A bookmark has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Title">The title of the bookmark, as entered by the
              user who created the bookmark. Represented by the Name component
              of the base Object Construct. Publishers MAY use the title of
              the target resource as a default for this property where a user
              hasn't entered a customized value.</t>

              <t hangText="Target URL">The URL of the item that is the target
              of the bookmark. Represented in JSON by a property called <spanx
              style="verb">targetUrl</spanx> whose value is a JSON string
              containing the target URL.</t>

              <t hangText="Thumbnail">The URL and metadata for a thumbnail
              version of the page. Represented by the Representative Image
              component of the base Object Construct. Processors MAY ignore
              thumbnails that are of an inappropriate size for their user
              interface.</t>
            </list></t>
        </section>

        <section anchor="comment" title="Comment">
          <t>The "comment" object type represents a textual response to
          another object.</t>

          <t>The comment object type MUST NOT be used for other kinds of
          replies, such as video replies or reviews.</t>

          <t>The "comment" object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/comment</spanx>.</t>

          <t>A comment has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Subject">The subject of the comment. Represented by
              the Name component of the base Object Construct. Many systems do
              not have the concept of a title or subject for a comment; such
              systems MUST omit the Name component. Processors SHOULD refer to
              such comments as simply being "a comment", with appropriate
              localization, if they are to be described in a sentence.</t>

              <t hangText="Content">The content of the comment. Represented in
              JSON as a property called <spanx style="verb">content</spanx>
              whose value is a JSON string containing a fragment of HTML that
              represents the content. Publishers SHOULD include any markup
              necessary to achieve a similar presentation to that on the
              publisher's own HTML pages, including any links that the service
              automatically adds. Processors MAY remove all HTML markup and
              consider the comment to be plain text.</t>
            </list></t>
        </section>

        <section anchor="file" title="File">
          <t>The "file" Object type represents some document or other file
          with no additional machine-readable semantics.</t>

          <t>It is intended that this type be used as a base type for other
          Objects that manifest as files, so that additional semantics can be
          added while providing a fallback ability for clients that do not
          support the more specific Object type.</t>

          <t>The "file" Object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/file</spanx>.</t>

          <t>A file has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Associated File URL">The URL of the file described
              by this Object Construct. Represented in JSON by a property
              called <spanx style="verb">fileUrl</spanx> whose value is a JSON
              string containing the URL.</t>

              <t hangText="File MIME Type">The MIME type of the file described
              by this Object Construct. Represented in JSON by a property
              called <spanx style="verb">mimeType</spanx> whose value is a
              JSON string containing the MIME type.</t>
            </list></t>
        </section>

        <section anchor="folder" title="Folder">
          <t>The "folder" object type represents a collection of files or
          media objects. This is similar to the "photo album" object type, but
          not specifically representing a collection of "photos."</t>

          <t>The "folder" object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/folder</spanx>.</t>

          <t>A folder has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Preview Image Link">A Media Link Construct
              describing an image file that can be used as a preview image for
              the folder. Represented by the Representative Image component of
              the base Object Construct. Processors MAY ignore thumbnails that
              are of an inappropriate size for their user interface.</t>
            </list></t>
        </section>

        <section anchor="group" title="Group">
          <t>The "group" Object type represents a social networking group. A
          group is a collection of people which people can join and leave.</t>

          <t>The "group" Object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/group</spanx>.</t>

          <t>A group has no additional components.</t>
        </section>

        <section anchor="list" title="List">
          <t>The "list" object type represents a collection of related
          objects.</t>

          <t>The "list" object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/list</spanx>.</t>

          <t>A list has no additional components.</t>
        </section>

        <section anchor="note" title="Note">
          <t>The "note" Object type represents short-form text messages. This
          Object type is intended for use in "micro-blogging" and in systems
          where users are invited to publish short, often plain-text messages
          whose useful lifespan is generally shorter than that of an article
          or weblog entry.</t>

          <t>A note is similar in structure to an article, but it does not
          have a title and its body tends to be shorter. Applications will
          often display the entire content of a note in an activity stream UI,
          whereas they MAY display only the title or the title and summary for
          a weblog entry.</t>

          <t>The "note" Object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/note</spanx>.</t>

          <t>A note has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Content">The content of the comment. Represented in
              JSON as a property called <spanx style="verb">content</spanx>
              whose value is a JSON string containing a fragment of HTML that
              represents the content. Publishers SHOULD include any markup
              necessary to achieve a similar presentation to that on the
              publisher's own HTML pages, including any links that the service
              automatically adds. Processors MAY remove all HTML markup and
              consider the comment to be plain text.</t>
            </list></t>
        </section>

        <section anchor="person" title="Person">
          <t>The "person" Object type represents a user account. This is often
          represents a person, but might also be a company or fictitious
          character that is being represented by a user account.</t>

          <t>The "person" Object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/person</spanx>.</t>

          <t>A person has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Display Name">A name that can be used for the
              person in the user interface. This is often a name by which the
              individual is known in a given context; no restriction is placed
              on what kind of name may be used here. Represented by the Name
              component of the base Object Construct.</t>

              <t hangText="Avatar">A link to an "avatar" or "userpic" image
              for the user. Represented by the Representative Image component
              of the base Object Construct.</t>
            </list></t>
        </section>

        <section anchor="photo" title="Photo">
          <t>The "photo" object type represents a graphical still image.</t>

          <t>The "photo" Object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/photo</spanx>.</t>

          <t>A photo has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Thumbnail">A link to a thumbnail version of the
              image. Represented by the Representative Image component of the
              base Object Construct. Processors MAY ignore thumbnails that are
              of an inappropriate size for their user interface.</t>

              <t hangText="Larger Image">A Media Link Construct linking to a
              larger -- ideally, full-size -- version of the photo intended
              for standalone viewing. Represented in JSON as a property named
              <spanx style="verb">fullImage</spanx> whose value is a JSON
              object with properties as defined in [TODO: xref the JSON
              serialization of a Media Link Construct].</t>
            </list></t>
        </section>

        <section anchor="photo-album" title="Photo Album">
          <t>The "photo album" object type represents a collection of
          images.</t>

          <t>The "photo album" object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/photo-album</spanx>.</t>

          <t>The photo album has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Preview Image Link">A Media Link Construct
              describing an image file that can be used as a preview image for
              the album. Represented by the Representative Image component of
              the base Object Construct. Processors MAY ignore thumbnails that
              are of an inappropriate size for their user interface.</t>
            </list></t>
        </section>

        <section anchor="place" title="Place">
          <t>The "place" object type represents a location on Earth.</t>

          <t>The "place" object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/place</spanx>.</t>

          <t>A place has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Latitude">The latitude of the place as a point on
              Earth. Represented in JSON as a property named <spanx
              style="verb">latitude</spanx> whose value is a JSON number
              containing a decimal representation of the latitude in
              degrees.</t>

              <t hangText="Longitude">The longitude of the place as a point on
              Earth. Represented in JSON as a property named <spanx
              style="verb">longitude</spanx> whose value is a JSON number
              containing a decimal representation of the longitude in
              degrees.</t>
            </list></t>
        </section>

        <section anchor="playlist" title="Playlist">
          <t>The "playlist" object type represents an ordered list of
          time-based media items, such as video and audio objects.</t>

          <t>The "playlist" object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/playlist</spanx>.</t>

          <t>A playlist has no additional components.</t>
        </section>

        <section anchor="product" title="Product">
          <t>The "product" object type represents a commercial good or
          service.</t>

          <t>The "product" object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/product</spanx>.</t>

          <t>A product has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Thumbnail">A link to a thumbnail-sized image that
              contains a photo of the product. Represented by the
              Representative Image component of the base Object Construct.
              Processors MAY ignore thumbnails that are of an inappropriate
              size for their user interface.</t>

              <t hangText="Larger Image">A Media Link Construct linking to a
              larger -- ideally, full-size -- version of the photo of the
              product. Represented in JSON as a property named <spanx
              style="verb">fullImage</spanx> whose value is a JSON object with
              properties as defined in [TODO: xref the JSON serialization of a
              Media Link Construct].</t>
            </list></t>
        </section>

        <section anchor="review" title="Review">
          <t>The "review" object type represents a primarily prose-based
          commentary on another object.</t>

          <t>The "review" object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/review</spanx>.</t>

          <t>A review has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Title">The title of the review. Represented by the
              Name component of the base Object Construct. Many systems do not
              have the concept of a title for a review; such systems MUST omit
              the Name component. Processors SHOULD refer to such reviews as
              simply being "a review", with appropriate localization, if they
              are to be described in a sentence.</t>

              <t hangText="Content">The content of the comment. Represented in
              JSON as a property called <spanx style="verb">content</spanx>
              whose value is a JSON string containing a fragment of HTML that
              represents the content. Publishers SHOULD include any markup
              necessary to achieve a similar presentation to that on the
              publisher's own HTML pages, including any links that the service
              automatically adds. Processors MAY remove all HTML markup and
              consider the comment to be plain text.</t>

              <t hangText="Reviewed Object">The Object Construct representing
              the item that this review applies to. Represented as the In
              Reply To Object component of the base Object Construct.</t>

              <t hangText="Rating">A rating for the item, given as a number
              between 1.0 and 5.0 inclusive with one decimal place of
              precision. Represented in JSON as a property called <spanx
              style="verb">rating</spanx> whose value is a JSON number giving
              the rating.</t>
            </list></t>
        </section>

        <section anchor="service" title="Service">
          <t>The "service" Object type represents a website, personal website
          or blog, business, brand, or other entity that performs some kind of
          work for other entities, people, or services, or acts as kind of
          container for other objects.</t>

          <t>The "service" Object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/service</spanx>.</t>

          <t>A service has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="icon">A Media Link Construct representing a link to
              a small image representing the service. Represented in JSON as a
              property named <spanx style="verb">icon</spanx> whose value is a
              JSON object with properties as defined in [TODO: xref the JSON
              serialization of a Media Link Construct]. The linked image MUST
              have an aspect ratio of one (horizontal) to one (vertical) and
              SHOULD be suitable for presentation at a small size.</t>
            </list></t>
        </section>

        <section anchor="status" title="Status">
          <t>The "status" Object type represents a human-readable update of
          the author's situation, mood, location or other status.</t>

          <t>A status is similar in structure to a note, but carries the
          additional meaning that the content is primarily describing
          something its author is doing, feeling or experiencing.</t>

          <t>A consumers MAY consider the content of the most recent status
          object it encountered to be the user's current status, unless the
          most recent status update is old. When a status becomes too old is
          not defined by this specification.</t>

          <t>The "status" object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/status</spanx>.</t>

          <t>A status has the same components as a note.</t>
        </section>

        <section anchor="video" title="Video">
          <t>The "video" Object type represents video content, which usually
          consists of a motion picture track and an audio track.</t>

          <t>The "video" Object type is identified by the URI <spanx
          style="verb">http://activitystrea.ms/schema/1.0/video</spanx>.</t>

          <t>A video has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Video Stream Link">A Media Link Construct linking
              to the video content itself. Represented in JSON as a property
              called <spanx style="verb">stream</spanx> whose value is a JSON
              object with properties as defined in [TODO: xref the JSON
              serialization of a Media Link Construct]</t>

              <t hangText="Embed Code">An HTML fragment that, when embedded in
              an HTML page, will provide an interactive player UI for the
              video stream. Represented in JSON as a property called <spanx
              style="verb">embedCode</spanx> whose value is a JSON string
              containing the fragment of HTML.</t>
            </list></t>
        </section>
      </section>

      <section title="Base Activity Context Elements">
        <t>This specification defines an initial set of activity context
        elements that can be used with all activity entries. These provide
        orthogonal context information that can apply to all activities.
        [TODO: Figure out what to do with this stuff in our JSON
        serialization.]</t>

        <section anchor="location" title="Location">
          <t>Location is a concept which can be used inside the atom:entry
          level, atom:author and activity:object. Location can be specified
          via geographic coordinates, a street address, a free-form location
          name or a combination of these. Geographic coordinates should be
          included as a geo:point element as described by the GeoRSS
          specification. Addresses should be included using a poco:address
          element defined at Portable Contacts specification. The entry level
          location represents the location of the author at the time the
          activity was performed. The author level location represents the
          primary location of the author. Finally, the location within other
          objects represents the physical location of those objects. All
          location fields are optional. For free form addresses use the
          poco:formatted field.</t>

          <t><xref target="location-poco"></xref></t>

          <t><figure anchor="location-poco" suppress-title="true"
              title="Location Example">
              <artwork><![CDATA[<entry>
  <id>tag:world:activity:1212121212121</id>
  <title>Rob liked Goldeberg's Deli</title>
  <author>
    <name>Rob Dolin</name>
    <id>tag:world:person:1212121212121</id>
    <link rel="alternate" type="text/html" href="http://robdolin.com" />
    <poco:address>
      <poco:locality>Marina del Rey</poco:locality> 
      <poco:region>CA</poco:region> 
      <poco:postalCode>90292</poco:postalCode> 
      <poco:country>US</poco:country> 
    </poco:address>
  </author>
  <activity:object>
    <activity:object-type>http://activitystrea.ms/schema/1.0/place</object-type>
    <id>tag:world:place:1212121212121</id>
    <title>Goldberg's Deli</title>
    <link rel="alternate" type="text/html" href="http://www.deli.com" />
    <geo:point>33.9777 -118.4351</geo:point>
    <poco:address>
      <poco:streetAddress>14016 Bora Bora Way</poco:streetAddress>
      <poco:locality>Marina del Rey</poco:locality> 
      <poco:region>CA</poco:region>       
      <poco:postalCode>90292</poco:postalCode> 
      <poco:country>US</poco:country> 
    </poco:address>
  </activity:object>
  <geo:point>33.9777 -119.4351</geo:point>
  <activity:verb>http://activitystrea.ms/schema/1.0/like</activity:verb>
</entry>]]></artwork>
            </figure></t>
        </section>

        <section anchor="mood" title="Mood">
          <t>Mood describes the mood of the user when the activity was
          performed. This is usually collected via an extra field in the user
          interface used to perform the activity. For the purpose of this
          schema, a mood is a freeform, short mood keyword or phrase along
          with an optional mood icon image.</t>

          <t>Moods are included via a mood element in the namespace <spanx
          style="verb">http://activitystrea.ms/context/</spanx>.</t>

          <t>The content of the mood element is the mood keyword or
          phrase.</t>

          <t>The mood element may have an optional <spanx style="verb">icon</spanx>
          attribute which contains the URL of a mood icon image. The mood icon
          image SHOULD be small and appropriate to be displayed alongside the
          mood keyword at a normal text size.</t>
        </section>
      </section>

      <section anchor="replies" title="Replies">
        <t>Most social applications have a concept of "comments", "replies" or
        "responses" to social Objects. In many cases these are simple text
        messages, but any Object can in practice be a reply.</t>

        <t>A text-only reply SHOULD be represented using the comment object
        type as described in <xref target="comment"></xref>. Replies of other
        types MUST carry the appropriate type and MUST NOT carry the comment
        object type.</t>

        <t>Replies, regardless of object type, SHOULD be published with an In
        Reply To Object component describing the Object Construct they are in
        reply to.</t>

        <t>The act of posting a reply is represented by the post Verb as with
        "top-level" Objects.</t>
      </section>
    </section>

    <section title="Event Schema">
      <t>The event schema provides a vocabulary that is useful in applications
      that use real-world events and meetings as social objects.</t>

      <section title="Event Verbs">
        <section anchor="rsvp-yes" title="Positive RSVP">
          <t>The "positive RSVP" verb indicates that the actor has made a
          positive RSVP for the object. This specification only defines the
          meaning of this verb when its object is an event (see <xref
          target="event"></xref>), though implementors SHOULD be prepared to
          handle other object types as meaning MAY be provided by extension
          specifications.</t>

          <t>The use of this Verb is only appropriate when the RSVP was
          created by an explicit action by the actor. It is not appropriate to
          use this verb when a user has been added as an attendee by an event
          organiser or administrator.</t>

          <t>The verb URI for the "positive RSVP" Verb is <spanx style="verb">http://activitystrea.ms/schema/1.0/rsvp-yes</spanx>.</t>
        </section>

        <section anchor="rsvp-maybe" title="Possible RSVP">
          <t>The "possible RSVP" verb indicates that the actor has made a
          possible RSVP for the object. This specification only defines the
          meaning of this verb when its object is an event (see <xref
          target="event"></xref>), though implementors SHOULD be prepared to
          handle other object types as meaning MAY be provided by extension
          specifications.</t>

          <t>The use of this Verb is only appropriate when the RSVP was
          created by an explicit action by the actor. It is not appropriate to
          use this verb when a user has been added as an attendee by an event
          organiser or administrator.</t>

          <t>The verb URI for the "possible RSVP" Verb is <spanx style="verb">http://activitystrea.ms/schema/1.0/rsvp-maybe</spanx>.</t>
        </section>

        <section anchor="rsvp-no" title="Negative RSVP">
          <t>The "negative RSVP" verb indicates that the actor has made a
          negative RSVP for the object. This specification only defines the
          meaning of this verb when its object is an event (see <xref
          target="event"></xref>), though implementors SHOULD be prepared to
          handle other object types as meaning MAY be provided by extension
          specifications.</t>

          <t>The use of this Verb is only appropriate when the RSVP was
          created by an explicit action by the actor. It is not appropriate to
          use this verb when a user has been added as an attendee by an event
          organiser or administrator.</t>

          <t>The verb URI for the "negative RSVP" Verb is <spanx style="verb">http://activitystrea.ms/schema/1.0/rsvp-no</spanx>.</t>
        </section>
      </section>

      <section title="Event Object Types">
        <section anchor="event" title="Event">
          <t>The "event" object type represents an event that occurs in a
          certain place during a particular interval of time.</t>

          <t>The object type URL for the "event" object type is <spanx
          style="verb">http://activitystrea.ms/schema/1.0/event</spanx>.</t>

          <t>An event has the following additional components:</t>

          <t><list style="hanging">
              <t hangText="Start Date and Time">The date and time that the
              event begins. Represented in JSON as a property called <spanx
              style="verb">startTime</spanx> whose value is JSON string
              containing a W3CDTF timestamp. [TODO: Reference W3CDTF spec.]
              [TODO: Include prose describing how to represent just a date vs.
              a date and time.]</t>

              <t hangText="End Date and Time">The date and time that the event
              ends. Represented in JSON as a property called <spanx
              style="verb">endTime</spanx> whose value is JSON string
              containing a W3CDTF timestamp. [TODO: Reference W3CDTF spec.]
              [TODO: Include prose describing how to represent just a date vs.
              a date and time.]</t>
            </list></t>
        </section>
      </section>
    </section>

    <section title="Music Schema">
      <t>The music schema provides a vocabulary that is useful in applications
      that use music, musicians and albums as social objects.</t>

      <section title="Music Object Types">
        <section anchor="song" title="Song">
          <t>The "song" Object type represents a song or a recording of a
          song.</t>

          <t>Objects of type Song might contain information about the song or
          recording, or they might contain some representation of the
          recording itself. In the latter case, the song SHOULD also be
          annotated with the "audio" object type as described in <xref
          target="audio"></xref> and use its properties. This type should only
          be used when the publisher can guarantee that the object is a song
          rather than merely a generic audio stream.</t>

          <t>The Object type URL for the "song" Object type is <spanx
          style="verb">http://activitystrea.ms/schema/1.0/song</spanx>.</t>

          <t>A song has no additional components.</t>
        </section>
      </section>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <reference anchor="RFC4287">
        <front>
          <title>The Atom Syndication Format</title>

          <author>
            <organization></organization>
          </author>

          <date />
        </front>
      </reference>

      <reference anchor="RFC2119">
        <front>
          <title>RFC 2119</title>

          <author>
            <organization></organization>
          </author>

          <date />
        </front>
      </reference>

      <reference anchor="RFC3987">
        <front>
          <title>Internationalized Resource Identifiers (IRIs)</title>

          <author>
            <organization></organization>
          </author>

          <date />
        </front>
      </reference>

      <reference anchor="RFC4685">
        <front>
          <title>Atom Threading Extensions</title>

          <author fullname="James M. Snell" initials="J. M." surname="Snell">
            <organization></organization>
          </author>

          <date month="September" year="2006" />
        </front>
      </reference>

      <reference anchor="atomcommentmeta-00">
        <front>
          <title>Atom Comment Metadata Extensions</title>

          <author fullname="Martin Atkins" initials="M." surname="Atkins">
            <organization></organization>
          </author>

          <date />
        </front>
      </reference>

      <reference anchor="hreview">
        <front>
          <title>The hReview Microformat</title>

          <author>
            <organization>microformats community</organization>
          </author>

          <date />
        </front>
      </reference>

      <reference anchor="activitystreams">
        <front>
          <title>Activity Streams Concepts and Representations</title>

          <author>
            <organization></organization>
          </author>

          <date />
        </front>
      </reference>
    </references>

    <section title="Acknowledgements">
      <t>...</t>
    </section>
  </back>
</rfc>
